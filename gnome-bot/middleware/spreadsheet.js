/**
 * @file spreadsheet.js is to get the data from google sheet and put as JSON in the machine
 * @author Alfian Firmansyah <alfianvansykes@gmail.com>
 * @version 1.0
 */

import {
    GoogleSpreadsheet
} from 'google-spreadsheet';


import dotenv from 'dotenv'
dotenv.config({
    path: `${process.env.NODE_ENV}.env`
});
import cron from 'node-cron';
import fs from 'fs';

export default async function createConversationJSON() {

    cron.schedule('* * * * *', async () => {
        console.log('running a to create conversation json data every minute');


        // Initialize the sheet - doc ID is the long id in the sheets URL
        const doc = new GoogleSpreadsheet('1LaLZRWMqIhoYFpCJDZsQVaY6N_wBwMaSH8XmRtjfHwE');

        // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
        await doc.useServiceAccountAuth({
            // env var values are copied from service account credentials generated by google
            // see "Authentication" section in docs for more info
            client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
            private_key: process.env.GOOGLE_PRIVATE_KEY,
        });

        await doc.loadInfo(); // loads document properties and worksheets
        console.log('Load google spreadsheet: ' + doc.title);

        const sheet = doc.sheetsById[326994845]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
        console.log('Load sheet: ' + sheet.title);
        console.log('Total Row scanned: ' + sheet.rowCount);

        await sheet.loadCells('A1:B1000'); // loads range of cells into local cache - DOES NOT RETURN THE CELLS

        let i = 0;
        var conversation = [];
        while (true) {
            const question = sheet.getCell(i, 0); // access cells using a zero-based index
            const answer = sheet.getCell(i, 1)

            if (question.value === null || answer.value === null) {
                break;
            } else {
                var obj = {}; // <---- Move declaration inside loop

                obj['question'] = question.value;
                obj['answer'] = answer.value;
                conversation.push(obj);
                i++;
            }

        }

        const json = JSON.stringify(conversation);

        fs.writeFile('json_database/conversation.json', json, 'utf8', function (err) {
            if (err) {
                console.log(err);
            } else {
                //Everything went OK!
                console.log("File conversation.json has been written in the machine.")
            }
        });

    });
}